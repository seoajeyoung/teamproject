<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mappers.StoreMapper">

	<select id="getMemberInfo" resultType="com.itwillbs.domain.MemberDTO"> <!-- 회원정보 조회 -->
  		select * from MEMBERSTEST
  		where member_num = #{member_num}
  	</select>

	<select id="getProduct" resultType="com.itwillbs.domain.StoreDTO"> <!-- 스토어 메인에서 상품 4개씩만 나오게 함 -->
	<![CDATA[
		SELECT *
		  FROM ( SELECT *
		  			  , ROW_NUMBER() OVER (PARTITION BY st_type ORDER BY st_num DESC) AS row_num
		  		   FROM STORETEST ) AS sub
		 WHERE row_num <= 4
		 ORDER BY st_type, row_num;
	]]>
	</select>
	
	<select id="getAllProduct" resultType="com.itwillbs.domain.StoreDTO"> <!--  -->
		SELECT *
		FROM STORETEST
		ORDER BY st_type, st_num DESC;
	
	</select>
	
	<select id="productCategory" resultType="com.itwillbs.domain.StoreDTO"> <!-- 카테고리에 해당하는 모든 상품 조회 -->
        SELECT * 
          FROM STORETEST 
         WHERE st_type = #{category} 
         ORDER BY st_num DESC;
    </select>
    
    <select id="getProductByNum" resultType="com.itwillbs.domain.StoreDTO"> <!-- 카테고리에 해당하는 모든 상품 조회 -->
        SELECT * 
          FROM STORETEST 
         WHERE st_num = #{st_num} 
    </select>
    
     <!-- 장바구니에 상품 추가 -->
    <insert id="addCart" parameterType="com.itwillbs.domain.CartDTO"> 
        INSERT INTO CARTTEST (cart_num, member_num, st_num, cart_quantity, cart_date)
        VALUES (null, #{member_num}, #{st_num}, #{cart_quantity}, NOW())
    </insert>

    <!-- 특정 사용자(member_num으로 식별)의 특정 상품(st_num) 장바구니 항목 조회 (중복 체크용) -->
    <select id="getUserCart" resultType="com.itwillbs.domain.CartDTO">
        SELECT * 
          FROM CARTTEST 
         WHERE member_num = #{member_num} AND st_num = #{st_num}
    </select>

    <!-- 장바구니 항목 업데이트 (수량 수정) -->
    <update id="updateCartItem" parameterType="com.itwillbs.domain.CartDTO">
        UPDATE CARTTEST 
           SET cart_quantity = #{cart_quantity}, cart_date = NOW() 
         WHERE cart_num = #{cart_num} AND st_num = #{st_num}
    </update>

	<!-- 장바구니 조회  -->
	<select id="getCartItem" resultType="com.itwillbs.domain.CartDTO">
    SELECT c.cart_num, c.member_num, c.st_num, c.cart_quantity, c.cart_date, 
           s.st_name, s.st_price
      FROM CARTTEST c 
      JOIN STORETEST s ON c.st_num = s.st_num
     WHERE c.member_num = #{member_num}
     ORDER BY c.cart_date DESC
	</select>
	
  	<!-- 장바구니 상품 삭제 -->
	<delete id="deleteCart">
		DELETE from CARTTEST
		WHERE cart_num = #{cart_num} and member_num = #{member_num}
	
	</delete>
  
    <!-- ======================메뉴코드 관련======================= -->
  
  	<!-- 대분류코드 추가 -->
	<insert id="addCode">
        INSERT INTO CODETEST (code_id, code_value)
        VALUES (#{code_id}, #{code_value})
	</insert>
	
	<!-- 상세분류코드 추가  -->
	<insert id="addDetailCode">
        INSERT INTO CODEDETAILTEST (code_num, detail_code, detail_value)
    	VALUES (
       (SELECT code_num FROM CODETEST WHERE code_id = #{code_id} 
       						 AND code_value = #{code_value}), #{detail_code}, #{detail_value}
    )
	</insert>

	<!-- 대분류코드 조회 -->
	<select id="getCodeList" resultType="com.itwillbs.domain.CodeDTO">
        SELECT *
        FROM CODETEST
  
    </select>
	
	<!-- 상세분류코드 조회 -->
	<select id="getCodeDetail" resultType="com.itwillbs.domain.CodeDetailDTO">
        SELECT cd.detail_code_num, ct.code_id, ct.code_value, 
        	   cd.detail_code, cd.detail_value
    	FROM CODEDETAILTEST cd
    	JOIN CODETEST ct ON cd.code_num = ct.code_num
  
    </select>
    
    <!-- 대분류코드 삭제 -->
    <delete id="deleteCategory">
    	DELETE FROM CODETEST
    	WHERE code_num = #{code_num}
	</delete>
    
	<!-- 상세분류코드 삭제 -->
	<delete id="deleteCode">
    	DELETE FROM CODEDETAILTEST
    	WHERE detail_code_num = #{detail_code_num}
	</delete>
	
	<!-- @@@@@@@@@@@@@@@@@@@@코드중복확인을 위한 코드들@@@@@@@@@@@@@@@@@@@@@ -->
	<select id="countCodeId" resultType="int">
        SELECT COUNT(*)
        FROM CODETEST
        WHERE code_id = #{code_id}
    </select>

    <select id="countCodeValue" resultType="int">
        SELECT COUNT(*)
        FROM CODETEST
        WHERE code_value = #{code_value}
    </select>

    <select id="countDetailCode" resultType="int">
        SELECT COUNT(*)
        FROM CODEDETAILTEST
        WHERE code_id = #{codeId} AND detail_code = #{detailCode}
    </select>

    <select id="countDetailValue" resultType="int">
        SELECT COUNT(*)
        FROM CODEDETAILTEST
        WHERE code_id = #{codeId} AND detail_value = #{detailValue}
    </select>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
	<!-- 메뉴값 가져오기 위함 -->
	<select id="getCategories" parameterType="string" resultType="com.itwillbs.domain.CodeDetailDTO">
    	SELECT cd.detail_code_num, ct.code_id, ct.code_value, 
           	   cd.detail_code, cd.detail_value
    	FROM CODEDETAILTEST cd
    	JOIN CODETEST ct ON cd.code_num = ct.code_num
    	WHERE ct.code_id = #{code_id}
	</select>
	
	<!-- ==================================================== -->
	
	<!-- 결제정보 삽입  -->
	<insert id="insertPayment">
    INSERT INTO STOREPAYMENTTEST
    (sp_num, product_total_price, PAYMENT_DATE,cart_num, member_num, st_num, cart_quantity)
    VALUES (null,  
            (SELECT s.st_price * c.cart_quantity
             FROM CARTTEST c 
             JOIN STORETEST s ON s.st_num = c.st_num 
             WHERE c.cart_num = #{cart_num}), 
            null,
            #{cart_num}, 
            #{member_num}, 
            #{st_num}, 
            #{cart_quantity})
	</insert>
	

	<!-- 장바구니에서 상품 제거  -->
	<delete id="deleteMemberCart">
		delete from CARTTEST
		where member_num = #{member_num}
	</delete>
	
	<!-- 장바구니 화면에서 수량 변경  -->
	<update id="updateCartQuantity">
        UPDATE CARTTEST
        SET cart_quantity = #{cart_quantity}  
        WHERE cart_num = #{cart_num}
    </update>
    
    
 <!--     수정MAPPER -->
    
<!--     <select id="getMemberInfo" resultType="com.itwillbs.domain.MemberDTO"> 회원정보 조회 -->
<!--   		SELECT * FROM MEMBERS -->
<!--   		WHERE MEM_NUM = #{member_num} -->
<!--   	</select> -->

<!-- 	<select id="getProduct" resultType="com.itwillbs.domain.StoreDTO"> 스토어 메인에서 상품 4개씩만 나오게 함 -->
<!-- 	<![CDATA[ -->
<!-- 		SELECT * -->
<!-- 		  FROM ( SELECT * -->
<!-- 		  			  , ROW_NUMBER() OVER (PARTITION BY ST_TYPE ORDER BY ST_NUM DESC) AS ROW_NUM -->
<!-- 		  		   FROM STORE ) AS sub -->
<!-- 		 WHERE ROW_NUM <= 4 -->
<!-- 		 ORDER BY ST_TYPE, ROW_NUM -->
<!-- 	]]> -->
<!-- 	</select> -->
	
<!-- 	<select id="getAllProduct" resultType="com.itwillbs.domain.StoreDTO">  -->
<!-- 		SELECT * -->
<!-- 		FROM STORE -->
<!-- 		ORDER BY ST_TYPE, ST_NUM DESC -->
	
<!-- 	</select> -->
	
<!-- 	<select id="productCategory" resultType="com.itwillbs.domain.StoreDTO"> 카테고리에 해당하는 모든 상품 조회 -->
<!--         SELECT *  -->
<!--           FROM STORE  -->
<!--          WHERE ST_TYPE = #{category}  -->
<!--          ORDER BY ST_NUM DESC -->
<!--     </select> -->
    
<!--     <select id="getProductByNum" resultType="com.itwillbs.domain.StoreDTO"> 카테고리에 해당하는 모든 상품 조회 -->
<!--         SELECT *  -->
<!--           FROM STORE  -->
<!--          WHERE ST_NUM = #{st_num}  -->
<!--     </select> -->
    
<!--      장바구니에 상품 추가 -->
<!--     <insert id="addCart" parameterType="com.itwillbs.domain.CartDTO">  -->
<!--         INSERT INTO CART (CART_NUM, MEM_NUM, ST_NUM, CART_QUANTITY, CART_DATE) -->
<!--         VALUES (null, #{member_num}, #{st_num}, #{cart_quantity}, NOW()) -->
<!--     </insert> -->

<!--     특정 사용자(member_num으로 식별)의 특정 상품(st_num) 장바구니 항목 조회 (중복 체크용) -->
<!--     <select id="getUserCart" resultType="com.itwillbs.domain.CartDTO"> -->
<!--         SELECT *  -->
<!--           FROM CART -->
<!--          WHERE MEM_NUM = #{member_num} AND ST_NUM = #{st_num} -->
<!--     </select> -->

<!--     장바구니 항목 업데이트 (수량 수정) -->
<!--     <update id="updateCartItem" parameterType="com.itwillbs.domain.CartDTO"> -->
<!--         UPDATE CART  -->
<!--            SET CART_QUANTITY = #{cart_quantity}, CART_DATE = NOW()  -->
<!--          WHERE CART_NUM = #{cart_num} AND ST_NUM = #{st_num} -->
<!--     </update> -->

<!-- 	장바구니 조회  -->
<!-- 	<select id="getCartItem" resultType="com.itwillbs.domain.CartDTO"> -->
<!--     SELECT c.CART_NUM, c.MEM_NUM, c.ST_NUM, c.CART_QUANTITY, c.CART_DATE,  -->
<!--            s.ST_NAME, s.ST_PRICE -->
<!--       FROM CART c  -->
<!--       JOIN STORE s ON c.ST_NUM = s.ST_NUM -->
<!--      WHERE c.MEM_NUM = #{member_num} -->
<!--      ORDER BY c.CART_DATE DESC -->
<!-- 	</select> -->
	
<!--   	장바구니 상품 삭제 -->
<!-- 	<delete id="deleteCart"> -->
<!-- 		DELETE FROM CART -->
<!-- 		WHERE CART_NUM = #{cart_num} AND MEM_NUM = #{member_num} -->
	
<!-- 	</delete> -->
  
<!--     ======================메뉴코드 관련======================= -->
  
  	<!-- 대분류코드 추가 -->
<!-- 	<insert id="addCode"> -->
<!--         INSERT INTO CODES (CODE_ID, CODE_VALUE) -->
<!--         VALUES (#{code_id}, #{code_value}) -->
<!-- 	</insert> -->
	
	<!-- 상세분류코드 추가  -->
<!-- 	<insert id="addDetailCode"> -->
<!--         INSERT INTO CODEDETAIL (CODE_NUM, DETAIL_CODE, DETAIL_VALUE) -->
<!--     	VALUES ( -->
<!--        (SELECT CODE_NUM FROM CODES WHERE CODE_ID = #{code_id}  -->
<!--        						 AND CODE_VALUE = #{code_value}), #{detail_code}, #{detail_value} -->
<!--     ) -->
<!-- 	</insert> -->

	<!-- 대분류코드 조회 -->
<!-- 	<select id="getCodeList" resultType="com.itwillbs.domain.CodeDTO"> -->
<!--         SELECT * -->
<!--         FROM CODES -->
  
<!--     </select> -->
	
	<!-- 상세분류코드 조회 -->
<!-- 	<select id="getCodeDetail" resultType="com.itwillbs.domain.CodeDetailDTO"> -->
<!--         SELECT cd.DETAIL_CODE_NUM, ct.CODE_ID, ct.CODE_VALUE,  -->
<!--         	   cd.DETAIL_CODE, cd.DETAIL_VALUE -->
<!--     	FROM CODEDETAIL cd -->
<!--     	JOIN CODES ct ON cd.CODE_NUM = ct.CODE_NUM -->
  
<!--     </select> -->
    
<!--     대분류코드 삭제 -->
<!--     <delete id="deleteCategory"> -->
<!--     	DELETE FROM CODES -->
<!--     	WHERE CODE_NUM = #{code_num} -->
<!-- 	</delete> -->
    
	<!-- 상세분류코드 삭제 -->
<!-- 	<delete id="deleteCode"> -->
<!--     	DELETE FROM CODEDETAIL -->
<!--     	WHERE DETAIL_CODE_NUM = #{detail_code_num} -->
<!-- 	</delete> -->
	
	<!-- ==============코드중복확인을 위한 코드들=================== -->
<!-- 	<select id="countCodeId" resultType="int"> -->
<!--         SELECT COUNT(*) -->
<!--         FROM CODES -->
<!--         WHERE CODE_ID = #{code_id} -->
<!--     </select> -->

<!--     <select id="countCodeValue" resultType="int"> -->
<!--         SELECT COUNT(*) -->
<!--         FROM CODES -->
<!--         WHERE CODE_VALUE = #{code_value} -->
<!--     </select> -->

<!--     <select id="countDetailCode" resultType="int"> -->
<!--         SELECT COUNT(*) -->
<!--         FROM CODEDETAIL -->
<!--         WHERE CODE_ID = #{codeId} AND DETAIL_CODE = #{detailCode} -->
<!--     </select> -->

<!--     <select id="countDetailValue" resultType="int"> -->
<!--         SELECT COUNT(*) -->
<!--         FROM CODEDETAIL -->
<!--         WHERE CODE_ID = #{codeId} AND DETAIL_VALUE = #{detailValue} -->
<!--     </select> -->
	
	<!-- ====================================== -->
	
	<!-- 메뉴값 가져오기 위함 -->
<!-- 	<select id="getCategories" parameterType="string" resultType="com.itwillbs.domain.CodeDetailDTO"> -->
<!--     	SELECT cd.DETAIL_CODE_NUM, ct.CODE_ID, ct.CODE_VALUE,  -->
<!--            	   cd.DETAIL_CODE, cd.DETAIL_VALUE -->
<!--     	FROM CODEDETAIL cd -->
<!--     	JOIN CODETS ct ON cd.CODE_NUM = ct.CODE_NUM -->
<!--     	WHERE ct.CODE_ID = #{code_id} -->
<!-- 	</select> -->
	
<!-- 	==================================================== -->
	
	<!-- 결제정보 삽입  -->
<!-- 	<insert id="insertPayment"> -->
<!--     INSERT INTO STOREPAYMENT -->
<!--     (SP_NUM, PRODUCT_TOTAL_PRICE, PAYMENT_DATE,CART_NUM, MEM_NUM, ST_NUM, CART_QUANTITY) -->
<!--     VALUES (null,   -->
<!--             (SELECT s.ST_PRICE * c.CART_QUANTITY -->
<!--              FROM CART c  -->
<!--              JOIN STORE s ON s.ST_NUM = c.ST_NUM  -->
<!--              WHERE c.CART_NUM = #{cart_num}),  -->
<!--             null, -->
<!--             #{cart_num},  -->
<!--             #{member_num},  -->
<!--             #{st_num},  -->
<!--             #{cart_quantity}) -->
<!-- 	</insert> -->
	

	<!-- 장바구니에서 상품 제거  -->
<!-- 	<delete id="deleteMemberCart"> -->
<!-- 		delete from CART -->
<!-- 		where MEM_NUM = #{member_num} -->
<!-- 	</delete> -->
	
	<!-- 장바구니 화면에서 수량 변경  -->
<!-- 	<update id="updateCartQuantity"> -->
<!--         UPDATE CART -->
<!--         SET CART_QUANTITY = #{cart_quantity}   -->
<!--         WHERE CART_NUM = #{cart_num} -->
<!--     </update> -->
    
	
</mapper>