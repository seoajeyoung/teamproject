<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mappers.StoreMapper">


	<select id="getMemberInfo"
		resultType="com.itwillbs.domain.MemberDTO"> <!-- 회원정보 조회 -->
		SELECT MEM_ID AS member_id, MEM_NAME AS member_name, MEM_NICKNAME AS
		member_nickname, MEM_PHONE AS member_phone
		FROM MEMBERS
		WHERE MEM_NUM = #{member_num}
	</select>

	<select id="getProduct"
		resultType="com.itwillbs.domain.StoreDTO"> <!-- 스토어 메인에서 상품 4개씩만 나오게 함 -->
	<![CDATA[
		SELECT ST_NUM AS st_num, ST_NAME AS st_name, ST_PRICE AS st_price, ST_TYPE AS st_type, ST_PICTURE AS st_picture
		  FROM ( SELECT ST_NUM AS st_num, ST_NAME AS st_name, ST_PRICE AS st_price, ST_TYPE AS st_type, ST_PICTURE AS st_picture
		  			  , ROW_NUMBER() OVER (PARTITION BY ST_TYPE ORDER BY ST_NUM DESC) AS ROW_NUM
		  		   FROM STORE ) AS sub
		 WHERE ROW_NUM <= 4
		 ORDER BY ST_TYPE, ROW_NUM
	]]>
	</select>


	<select id="productCategory"
		resultType="com.itwillbs.domain.StoreDTO"> <!-- 카테고리에 해당하는 모든 상품 조회 -->
		SELECT ST_NUM AS st_num, ST_NAME AS st_name, ST_PICTURE AS st_picture,
		ST_PRICE AS st_price
		FROM STORE
		WHERE ST_TYPE = #{category}
		ORDER BY
		ST_NUM DESC
	</select>

	<select id="getProductByNum"
		resultType="com.itwillbs.domain.StoreDTO"> <!-- 상품번호에 해당하는 상품정보 조회 -->
		SELECT ST_NUM AS st_num, ST_NAME AS st_name, ST_PICTURE AS st_picture,
		ST_PRICE AS st_price, ST_CONST AS st_const, ST_PERIOD AS st_period,
		ST_DETAIL AS st_detail
		FROM STORE
		WHERE ST_NUM = #{st_num}
	</select>

	<!-- 장바구니에 상품 추가 -->
	<insert id="addCart" parameterType="com.itwillbs.domain.CartDTO">
		INSERT INTO CART (CART_NUM,
		MEM_NUM, ST_NUM, CART_QUANTITY, CART_DATE)
		VALUES (null, #{member_num},
		#{st_num}, #{cart_quantity}, NOW())
	</insert>

	<!-- 특정 사용자(member_num으로 식별)의 특정 상품(st_num) 장바구니 항목 조회 (중복 체크용) -->
	<select id="getUserCart"
		resultType="com.itwillbs.domain.CartDTO">
		SELECT CART_NUM AS cart_num, ST_NUM AS st_num,
		MEM_NUM AS member_num, CART_QUANTITY AS cart_quantity, CART_DATE AS cart_date
		FROM CART
		WHERE MEM_NUM = #{member_num} AND ST_NUM =
		#{st_num}
	</select>

	<!-- 장바구니 항목 업데이트 (수량 수정) -->
	<update id="updateCartItem"
		parameterType="com.itwillbs.domain.CartDTO">
		UPDATE CART
		SET CART_QUANTITY = #{cart_quantity},
		CART_DATE = NOW()
		WHERE CART_NUM = #{cart_num} AND ST_NUM = #{st_num}
	</update>

	<!-- 장바구니 조회 -->
	<select id="getCartItem"
		resultType="com.itwillbs.domain.CartDTO">
		SELECT c.CART_NUM AS cart_num, c.MEM_NUM AS member_num,
		c.ST_NUM AS st_num, c.CART_QUANTITY AS cart_quantity,
		c.CART_DATE AS
		cart_date,
		s.ST_NAME AS st_name, s.ST_PRICE AS st_price
		FROM CART c
		JOIN
		STORE s ON c.ST_NUM =
		s.ST_NUM
		WHERE c.MEM_NUM = #{member_num}
		ORDER BY
		c.CART_DATE DESC
	</select>

	<!-- 장바구니 상품 삭제 -->
	<delete id="deleteCart">
		DELETE FROM CART
		WHERE CART_NUM = #{cart_num} AND
		MEM_NUM = #{member_num}

	</delete>

	<!-- ======================메뉴코드 관련======================= -->

	<!-- 대분류코드 추가 -->
	<insert id="addCode">
		INSERT INTO CODES (CODE_ID, CODE_VALUE)
		VALUES
		(#{code_id}, #{code_value})
	</insert>

	<!-- 상세분류코드 추가 -->
	<insert id="addDetailCode">
		INSERT INTO CODEDETAIL (CODE_NUM, DETAIL_CODE,
		DETAIL_VALUE)
		VALUES (
		(SELECT CODE_NUM FROM CODES WHERE CODE_ID =
		#{code_id}
		AND CODE_VALUE = #{code_value}), #{detail_code},
		#{detail_value}
		)
	</insert>

	<!-- 대분류코드 조회 -->
	<select id="getCodeList"
		resultType="com.itwillbs.domain.CodeDTO">
		SELECT CODE_NUM AS code_num, CODE_ID AS code_id, CODE_VALUE
		AS code_value
		FROM CODES

	</select>

	<!-- 상세분류코드 조회 -->
	<select id="getCodeDetail"
		resultType="com.itwillbs.domain.CodeDetailDTO">
		SELECT cd.DETAIL_CODE_NUM AS detail_code_num, ct.CODE_ID AS
		code_id, ct.CODE_VALUE AS code_value,
		cd.DETAIL_CODE AS detail_code,
		cd.DETAIL_VALUE AS detail_value
		FROM CODEDETAIL cd
		JOIN CODES ct ON
		cd.CODE_NUM = ct.CODE_NUM

	</select>

	<!-- 대분류코드 삭제 -->
	<delete id="deleteCategory">
		DELETE FROM CODES
		WHERE CODE_NUM = #{code_num}
	</delete>

	<!-- 상세분류코드 삭제 -->
	<delete id="deleteCode">
		DELETE FROM CODEDETAIL
		WHERE DETAIL_CODE_NUM =
		#{detail_code_num}
	</delete>

	<!-- ==============코드중복확인을 위한 코드들=================== -->
	<select id="countCodeId" resultType="int">
		SELECT COUNT(*)
		FROM CODES
		WHERE CODE_ID = #{code_id}
	</select>

	<select id="countCodeValue" resultType="int">
		SELECT COUNT(*)
		FROM CODES
		WHERE CODE_VALUE = #{code_value}
	</select>

	<select id="countDetailCode" resultType="int">
		SELECT COUNT(*)
		FROM
		CODEDETAIL
		WHERE CODE_NUM = #{code_num} AND DETAIL_CODE =
		#{detail_code}
	</select>

	<select id="countDetailValue" resultType="int">
		SELECT COUNT(*)
		FROM
		CODEDETAIL
		WHERE CODE_NUM = #{code_num} AND DETAIL_VALUE =
		#{detail_value}
	</select>

	<!-- ====================================== -->

	<!-- 메뉴값 가져오기 위함 -->
	<select id="getCategories" parameterType="string"
		resultType="com.itwillbs.domain.CodeDetailDTO">
		SELECT cd.DETAIL_CODE_NUM AS detail_code_num, ct.CODE_ID AS
		code_id, ct.CODE_VALUE AS code_value,
		cd.DETAIL_CODE AS detail_code,
		cd.DETAIL_VALUE AS detail_value
		FROM CODEDETAIL cd
		JOIN CODES ct ON
		cd.CODE_NUM = ct.CODE_NUM
		WHERE ct.CODE_ID = #{code_id}
	</select>

	<!-- ==================================================== -->

	<!-- 결제정보 삽입 -->
	<insert id="insertPayment">
		INSERT INTO STOREPAYMENT
		(SP_NUM, PRODUCT_TOTAL_PRICE,
		PAYMENT_DATE,CART_NUM, MEM_NUM, ST_NUM,
		CART_QUANTITY)
		VALUES (null,
		(SELECT s.ST_PRICE * c.CART_QUANTITY
		FROM CART c
		JOIN STORE s ON
		s.ST_NUM = c.ST_NUM
		WHERE c.CART_NUM =
		#{cart_num}),
		NOW(),
		#{cart_num},
		#{member_num},
		#{st_num},
		#{cart_quantity})
	</insert>


	<!-- 장바구니에서 상품 제거 -->
	<delete id="deleteMemberCart">
		delete from CART
		where MEM_NUM = #{member_num}
	</delete>

	<!-- 장바구니 화면에서 수량 변경 -->
	<update id="updateCartQuantity">
		UPDATE CART
		SET CART_QUANTITY = #{cart_quantity}
		WHERE
		CART_NUM = #{cart_num}
	</update>


	<!-- 채현 메인페이지 패키지 -->
	<select id="mainPackage"
		resultType="com.itwillbs.domain.StoreDTO">
		SELECT ST_NUM
		, ST_NAME
		, ST_PRICE
		, ST_PICTURE
		, ST_CONST
		, ROW_NUMBER() OVER(ORDER BY CAST(ST_NUM AS UNSIGNED)) AS RN
		FROM STORE
		WHERE ST_TYPE = "패키지"
		ORDER BY RN DESC
		LIMIT 3
	</select>
	<!-- 채현 메인페이지 영화관람권 -->
	<select id="giftcon" resultType="com.itwillbs.domain.StoreDTO">
		SELECT ST_NUM
		, ST_NAME
		, ST_PRICE
		, ST_PICTURE
		, ST_CONST
		, ROW_NUMBER() OVER(ORDER BY CAST(ST_NUM AS UNSIGNED)) AS RN
		FROM STORE
		WHERE ST_TYPE = "영화관람권"
		ORDER BY RN DESC
		LIMIT 3
	</select>


</mapper>